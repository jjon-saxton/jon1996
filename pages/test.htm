<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<!-- 2023-08-17 Thu 17:03 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>A Test Page</title>
<meta name="description" content="In the 1990's things were crazy and you never knew what browser would be best for a site...unless they told you ;)" />
<meta name="generator" content="Org Mode" />
<link href="../styles/main.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="content" class="content">
<h1 class="title">A Test Page</h1>
<p>
Hello all you awesome people!
</p>

<p>
This rad page collects some old skool HTML tags and stuff. It is designed to showcase what you could do with HTML back around 1996, the year I had started to learn how to build web sites. Right now it is blank, except this text, as I have to remember some of this stuff. Soon I hope it will be full of awesome stuff though!
</p>

<p>
The idea of this page is to show you the HTML tags or other code snippets and then show examples of how they would look. Now some of these examples may only work in certain older browsers. If that is the case I&rsquo;ll let you know. In fact, the first one is the <code>&lt;marquee&gt;</code> tag. This tag only worked in old versions of Internet Explorer.
</p>

<div id="outline-container-org09cc8a9" class="outline-2">
<h2 id="org09cc8a9">The <code>&lt;marquee&gt;</code> Tag</h2>
<div class="outline-text-2" id="text-org09cc8a9">
<p>
Internet Explorer 4+ required (or many modern browsers)
</p>

<div class="org-src-container">
<pre class="src src-html">&lt;<span style="color: #50fa7b;">marquee</span>&gt;This tag just scrolled text on a screen&lt;/<span style="color: #50fa7b;">marquee</span>&gt;
</pre>
</div>

<marquee>This tag just scrolled text on a screen</marquee>

<p>
The tag included some attributes, though no one I knew of ever uesed any of them. I&rsquo;ll show a few below, but, for a more detailed list and explinations, you can check out <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/marquee" target="_new">this page</a>.
</p>

<div class="org-src-container">
<pre class="src src-html">&lt;<span style="color: #50fa7b;">marquee</span> <span style="color: #ffc9e8;">scrollamount</span>=<span style="color: #f1fa8c;">"4"</span>&gt;This will slow down the scrolling!&lt;/<span style="color: #50fa7b;">marquee</span>&gt;
&lt;<span style="color: #50fa7b;">marquee</span> <span style="color: #ffc9e8;">direction</span>=<span style="color: #f1fa8c;">"right"</span>&gt;This text will scroll to the right!&lt;/<span style="color: #50fa7b;">marquee</span>&gt;
&lt;<span style="color: #50fa7b;">marquee</span> <span style="color: #ffc9e8;">behavior</span>=<span style="color: #f1fa8c;">"slide"</span>&gt;This changes how the text scrolls!&lt;/<span style="color: #50fa7b;">marquee</span>&gt;
</pre>
</div>

<marquee scrollamount="4">This will slow down the scrolling!</marquee>
<marquee direction="right">This text will scroll to the right!</marquee>
<marquee behavior="slide">This changes how the text scrolls!</marquee>

<p>
Of course these attributes can be combined! Be warned though it might get crazy!!
</p>

<div class="org-src-container">
<pre class="src src-html">&lt;<span style="color: #50fa7b;">marquee</span> <span style="color: #ffc9e8;">behavior</span>=<span style="color: #f1fa8c;">"slide"</span> <span style="color: #ffc9e8;">scrollamount</span>=<span style="color: #f1fa8c;">"4"</span> <span style="color: #ffc9e8;">direction</span>=<span style="color: #f1fa8c;">"right"</span>&gt;This might be a little weird!&lt;/<span style="color: #50fa7b;">marquee</span>&gt;
</pre>
</div>

<marquee behavior="slide" scrollamount="4" direction="right">This might be a little weird!</marquee>
</div>
</div>

<div id="outline-container-org1605675" class="outline-2">
<h2 id="org1605675">The <code>&lt;blink&gt;</code> Tag</h2>
<div class="outline-text-2" id="text-org1605675">
<p>
This is one that we have to be careful with today! Netscape Navigator 4+ may required for the examples to work correctly.
</p>

<div class="org-src-container">
<pre class="src src-html">&lt;<span style="color: #50fa7b;">blink</span>&gt;<span style="color: #1E2029; background-color: #bd93f9;">This text will only blink in old version of Netscape Navigator</span>&lt;/<span style="color: #50fa7b;">blink</span>&gt;
</pre>
</div>

<blink>This text will only blink in old version of Netscape Navigator</blink>

<p>
If the text above is not blinking it&rsquo;s becuase this tag was really only supported by Netscape and, most modern browsers never really supported it. The proper way to make text blink (which may not work in older browsers) uses CSS.
</p>

<div class="org-src-container">
<pre class="src src-html">&lt;<span style="color: #50fa7b;">style</span>&gt;
@keyframes blink{
  50% {
    opacity: 0;
  }
&lt;/<span style="color: #50fa7b;">style</span>&gt;
&lt;<span style="color: #50fa7b;">span</span> <span style="color: #ffc9e8;">style</span>=<span style="color: #f1fa8c;">"animation:blink 1s linear infinite"</span>&gt;This text will blink, but only in modern browsers.&lt;/<span style="color: #50fa7b;">span</span>&gt;
</pre>
</div>

<span class="blinky">This text will blink, but only in modern browsers.</span>

<p>
It should be noted that no attributes have been documented for the <code>&lt;blink&gt;</code> tag. It is likely that none existed or that it did not use any unique attributes. Also, if you want to use this tag and still ensure it works in most modern browsers you could do the following:
</p>

<div class="org-src-container">
<pre class="src src-html">&lt;<span style="color: #50fa7b;">style</span>&gt;
  blink {animation:blink 1s linear infinite}

@keyframes blink{
  50% {
    opacity: 0;
  }
&lt;/<span style="color: #50fa7b;">style</span>&gt;
&lt;<span style="color: #50fa7b;">blink</span>&gt;<span style="color: #1E2029; background-color: #bd93f9;">This text will blink, except in ol' Internet Explorer!</span>&lt;/<span style="color: #50fa7b;">blink</span>&gt;
</pre>
</div>

<blink class="blinky">This text will blink, except in ol' Internet Explorer!</blink>

<p>
For maximum compatibility, the CSS inside the <code>&lt;style&gt;</code> tags above should be inside that tag and either nested in the document&rsquo;s <code>&lt;head&gt;</code> tag or placed in a separate .css file.
</p>
</div>
</div>

<div id="outline-container-orga616cd6" class="outline-2">
<h2 id="orga616cd6">Frames!</h2>
<div class="outline-text-2" id="text-orga616cd6">
<p>
One of the most used design tricks in the 1990&rsquo;s was the use of frames. Frames divided a web page into two or more sections and let designers place different web pages in those sections. This was often used to add a static and persistent side bar to a page like how it is used on this site! This meant that users could have a side bar for navigation and that the web designer/developer didn&rsquo;t need to update every single page any time a link was added, edited, or removed. This was the reason I used frames for just about every site I made back in the day. You see if you used an HTML editor like Dreamweaver, this was less needed. Designers would write a template and then each page would link to that template. Updating the template would auto-magically update each page, but, for those of us who had to do everything by hand, this was a bit tedious, so frames were a good thing. They have fallen out of favor now since we have ajax and other methods of updating only portions of a page so they aren&rsquo;t needed any more, but they were very helpful before such technologies existed.
</p>

<p>
Frames could be simple, like this site, with only two columns or two rows, as shown by the code below taken directly from the main index source of this site:
</p>
<div class="org-src-container">
<pre class="src src-html">  &lt;<span style="color: #50fa7b;">frameset</span> <span style="color: #ffc9e8;">cols</span>=<span style="color: #f1fa8c;">"25%, 75%"</span>&gt;
    &lt;<span style="color: #50fa7b;">frame</span> <span style="color: #ffc9e8;">name</span>=<span style="color: #f1fa8c;">"navbar"</span> <span style="color: #ffc9e8;">src</span>=<span style="color: #f1fa8c;">"./frames/nav.htm"</span> /&gt;
    &lt;<span style="color: #50fa7b;">frame</span> <span style="color: #ffc9e8;">name</span>=<span style="color: #f1fa8c;">"main"</span> <span style="color: #ffc9e8;">src</span>=<span style="color: #f1fa8c;">"./frames/home.htm"</span> /&gt;
    &lt;<span style="color: #50fa7b;">noframes</span>&gt;
      &lt;<span style="color: #50fa7b;">p</span>&gt;This browser does not support frames and is not well-suited for the 1996 experience. It is either too new, or too old. Please use an era-appropriate browser like Netscape Navigator 3&lt;/<span style="color: #50fa7b;">p</span>&gt;
    &lt;/<span style="color: #50fa7b;">noframes</span>&gt;
  &lt;/<span style="color: #50fa7b;">frameset</span>&gt;
</pre>
</div>
<p>
The <code>&lt;noframes&gt;</code> tag told browsers what do display if that didn&rsquo;t support frames, this was mostly used by very old browsers or text-only browsers. Most designers would actually put a link to the navigation page or an alternate version of the site made for text-only browsers, or, if they were lazy, just say something like what I have in that example.
</p>

<p>
Frames could also be extremely complex with multiple rows and columns, as shown here:
</p>
<div class="org-src-container">
<pre class="src src-html">&lt;<span style="color: #50fa7b;">frameset</span> <span style="color: #ffc9e8;">rows</span>=<span style="color: #f1fa8c;">"20px,*,20px"</span> /&gt;
  &lt;<span style="color: #50fa7b;">frame</span> <span style="color: #ffc9e8;">name</span>=<span style="color: #f1fa8c;">"top"</span> <span style="color: #ffc9e8;">src</span>=<span style="color: #f1fa8c;">"./top.htm"</span> /&gt;
  &lt;<span style="color: #50fa7b;">frameset</span> <span style="color: #ffc9e8;">cols</span>=<span style="color: #f1fa8c;">"200px,*,20px"</span> /&gt;
    &lt;<span style="color: #50fa7b;">frame</span> <span style="color: #ffc9e8;">name</span>=<span style="color: #f1fa8c;">"navbar"</span> <span style="color: #ffc9e8;">src</span>=<span style="color: #f1fa8c;">"./nav.htm"</span> /&gt;
    &lt;<span style="color: #50fa7b;">frame</span> <span style="color: #ffc9e8;">name</span>=<span style="color: #f1fa8c;">"main"</span> <span style="color: #ffc9e8;">src</span>=<span style="color: #f1fa8c;">"./home.htm"</span> /&gt;
    &lt;<span style="color: #50fa7b;">frame</span> <span style="color: #ffc9e8;">name</span>=<span style="color: #f1fa8c;">"right"</span> <span style="color: #ffc9e8;">src</span>=<span style="color: #f1fa8c;">"./right.htm"</span> /&gt;
  &lt;/<span style="color: #50fa7b;">frameset</span>&gt;
  &lt;<span style="color: #50fa7b;">frame</span> <span style="color: #ffc9e8;">name</span>=<span style="color: #f1fa8c;">"bot"</span> <span style="color: #ffc9e8;">src</span>=<span style="color: #f1fa8c;">"./bottom.htm"</span> /&gt;
&lt;/<span style="color: #50fa7b;">frameset</span>&gt;
</pre>
</div>
<p>
I used some pretty complicated frames and some very interesting artistic skills to create some pretty interesting looking sites. I&rsquo;ll see if I can find some and at least give you a screen shot of them, because they were really quite creative, if I do say so myself.
</p>
</div>
</div>

<div id="outline-container-org926e882" class="outline-2">
<h2 id="org926e882">Image maps</h2>
<div class="outline-text-2" id="text-org926e882">
<p>
Image maps were an interesting concept. The idea was that you could split parts of an image up and then place hyperlinks in those parts and the user can then click that part of the image and go to another page. I don&rsquo;t have any example of this yet as I didn&rsquo;t use it much except for some navigation buttons placed in a single banner image, but <a href="https://www.w3schools.com/htmL/html_images_imagemap.asp">W3schools</a> has some information on how this would be done today. Most of this should be the same has it was back when it was more popular. Basically the image map encompassed <i>two</i> tags the <code>&lt;map&gt;</code> tag and the <code>&lt;area&gt;</code> tag. Where the <code>&lt;area&gt;</code> tag defined the clickable areas and the <code>&lt;map&gt;</code> defined the actual image map. It should be noted that the map did <b>not</b> include the image itself, this was still handled by the <code>&lt;img&gt;</code> tag. Here is an example similar to the one W3schools used.
</p>

<div class="org-src-container">
<pre class="src src-html">&lt;<span style="color: #50fa7b;">img</span> <span style="color: #ffc9e8;">src</span>=<span style="color: #f1fa8c;">"./images/topbanner.jpg"</span> <span style="color: #ffc9e8;">alt</span>=<span style="color: #f1fa8c;">"A banner including clickable navigation links"</span> <span style="color: #ffc9e8;">usemap</span>=<span style="color: #f1fa8c;">"#navMap"</span> /&gt;

&lt;<span style="color: #50fa7b;">map</span> <span style="color: #ffc9e8;">name</span>=<span style="color: #f1fa8c;">"navMap"</span>&gt;
  &lt;<span style="color: #50fa7b;">area</span> <span style="color: #ffc9e8;">shape</span>=<span style="color: #f1fa8c;">"rect"</span> <span style="color: #ffc9e8;">coords</span>=<span style="color: #f1fa8c;">"0,0,70,20"</span> <span style="color: #ffc9e8;">alt</span>=<span style="color: #f1fa8c;">"Home"</span> <span style="color: #ffc9e8;">href</span>=<span style="color: #f1fa8c;">"./home.htm"</span> /&gt;
  &lt;<span style="color: #50fa7b;">area</span> <span style="color: #ffc9e8;">shape</span>=<span style="color: #f1fa8c;">"rect"</span> <span style="color: #ffc9e8;">coords</span>=<span style="color: #f1fa8c;">"70,0,140,20"</span> <span style="color: #ffc9e8;">alt</span>=<span style="color: #f1fa8c;">"About Us"</span> <span style="color: #ffc9e8;">href</span>=<span style="color: #f1fa8c;">"./aboutus.htm"</span> /&gt;
&lt;/<span style="color: #50fa7b;">map</span>&gt;
</pre>
</div>

<p>
I don&rsquo;t have an asset made to demonstrate this, but you can get the idea from the page a linked in the last paragraph. Basically, the <code>&lt;img&gt;</code> tag uses the attribute, &ldquo;usemap&rdquo; to tell the browser to overly the <code>&lt;map&gt;</code> named &ldquo;navMap&rdquo; on top of the image. The <code>&lt;area&gt;</code> tags then define clickable areas within the map that will be overlaid. In this case to rectangles next to each other that are both about 70 pixles wide and 20 pixles tall with the first starting at the top left corner of the screen (0,0) and the second starting 70 pixles to the right of that one (70,0). There were even other shapes that could be defined including &ldquo;circle&rdquo; or &ldquo;poly&rdquo; (custom polygon), or &ldquo;default&rdquo; (which would just use the whole region).
</p>

<p>
As you could imagine this was a complex thing to implement as you would have to do mine the exact coordinates for each part of an area, which get even more complex with the &ldquo;poly&rdquo; shape. I never did this by hand, in fact, I doubt many designers did. Instead, we relayed on image map generators. Some times an HTML generator would serve this function, but I used an <a href="https://imagemap.org/">online tool</a> when I generated the one image map I used.
</p>
</div>
</div>
</div>
<div id="postamble" class="status">
<p class="date">Created: 2023-08-17 Thu 17:03</p>
<p class="creator"><a href="https://www.gnu.org/software/emacs/">Emacs</a> 29.1 (<a href="https://orgmode.org">Org</a> mode 9.7)</p>
</div>
</body>
</html>